{"version":3,"sources":["utilies/paginate.js","services/fakeGenreService.js","services/fakeMovieService.js","components/common/pagination.jsx","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableHeander.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/movies.jsx","components/customers.jsx","components/rentals.jsx","components/notfound.jsx","components/navBar.jsx","components/movieForm.jsx","App.js","registerServiceWorker.js","index.js"],"names":["paginate","items","pageNumber","pageSize","startIndex","_","slice","take","value","genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","Pagination","props","itemsCount","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","className","map","page","style","cursor","onClick","ListGroup","textProperty","valueProperty","onItemSelect","selectedItem","item","defaultProps","Likes","classes","this","Component","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","columns","label","key","TableBody","renderCell","content","get","createKey","data","Table","MoviesTable","movie","to","onLike","onDelete","Movies","state","handleDelete","filter","m","setState","handleLiked","index","indexOf","handlePageChange","handleGenreSelect","selectedGenre","handleSort","getPageData","allMovies","filtered","orderBy","totalCount","length","g","count","Customers","Rentals","NotFound","NavBar","type","id","MovieForm","match","history","params","push","App","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"mQACO,SAASA,EAASC,EAAOC,EAAYC,GAC1C,IAAMC,GAAcF,EAAa,GAAKC,EACtC,OAAOE,IAAEJ,GAAOK,MAAMF,GAAYG,KAAKJ,GAAUK,QCH5C,IAAMC,EAAS,CACpB,CAAEC,IAAK,2BAA4BC,KAAM,UACzC,CAAED,IAAK,2BAA4BC,KAAM,UACzC,CAAED,IAAK,2BAA4BC,KAAM,aCD3C,IAAMC,EAAS,CACb,CACEF,IAAK,2BACLG,MAAO,aACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,IACjBC,YAAa,2BACbC,OAAO,GAET,CACER,IAAK,2BACLG,MAAO,WACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,UACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,YAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,gBACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,WACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,mBACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,YACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,YAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,kBACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,YAChDI,cAAe,EACfC,gBAAiB,KAEnB,CACEN,IAAK,2BACLG,MAAO,eACPC,MAAO,CAAEJ,IAAK,2BAA4BC,KAAM,UAChDI,cAAe,EACfC,gBAAiB,M,WC1BNG,EApCI,SAACC,GAClB,IAAQC,EAAoDD,EAApDC,WAAYlB,EAAwCiB,EAAxCjB,SAAUmB,EAA8BF,EAA9BE,aAAcC,EAAgBH,EAAhBG,YACtCC,EAAaC,KAAKC,KAAKL,EAAalB,GAC1C,GAAmB,IAAfqB,EAAkB,OAAO,KAC7B,IAAMG,EAAQtB,IAAEuB,MAAM,EAAGJ,EAAa,GAEtC,OACE,8BACE,oBAAIK,UAAU,aAAd,SACGF,EAAMG,KAAI,SAACC,GAAD,OACT,oBAEEF,UAAWE,IAASR,EAAc,mBAAqB,YACvD,eAAa,OAHf,SAKE,sBACES,MAAO,CAAEC,OAAQ,WACjBJ,UAAU,YACVK,QAAS,kBAAMZ,EAAaS,IAH9B,SAKGA,KATEA,WCdXI,EAAY,SAACf,GACjB,IAAQnB,EACNmB,EADMnB,MAAOmC,EACbhB,EADagB,aAAcC,EAC3BjB,EAD2BiB,cAAeC,EAC1ClB,EAD0CkB,aAAcC,EACxDnB,EADwDmB,aAE1D,OACE,qBAAKV,UAAU,GAAf,SACE,oBAAIA,UAAU,aAAd,SACG5B,EAAM6B,KAAI,SAACU,GAAD,OACT,oBACER,MAAO,CAAEC,OAAQ,WACjBC,QAAS,kBAAMI,EAAaE,IAE5BX,UACEW,IAASD,EACL,yBACA,kBAPR,SAUGC,EAAKJ,IAPDI,EAAKH,YActBF,EAAUM,aAAe,CACvBL,aAAc,OACdC,cAAe,OAGFF,Q,OCzBTO,E,4JACJ,WACE,IAAIC,EAAU,cAEd,OADKC,KAAKxB,MAAMF,QAAOyB,GAAW,MAEhC,mBACET,QAASU,KAAKxB,MAAMc,QACpBL,UAAWc,EACXX,MAAO,CAAEC,OAAQ,WACjB,cAAY,a,GATAY,aAeLH,ICdTI,E,4MACJC,UAAY,SAACC,GACX,IAAMC,EAAU,eAAQ,EAAK7B,MAAM6B,YAC/BA,EAAWD,OAASA,EACtBC,EAAWC,MAA6B,QAArBD,EAAWC,MAAkB,OAAS,OAEzDD,EAAWD,KAAOA,EAClBC,EAAWC,MAAQ,OAErB,EAAK9B,MAAM+B,OAAOF,I,EAGpBG,eAAiB,SAACC,GAChB,IAAQJ,EAAe,EAAK7B,MAApB6B,WACR,OAAII,EAAOL,OAASC,EAAWD,KAAa,KACnB,QAArBC,EAAWC,MAAwB,mBAAGrB,UAAU,kBAC7C,mBAAGA,UAAU,qB,4CAGtB,WAAU,IAAD,OACP,OACE,gCACE,6BACGe,KAAKxB,MAAMkC,QAAQxB,KAAI,SAACuB,GAAD,OACtB,qBACExB,UAAU,YAEVK,QAAS,kBAAM,EAAKa,UAAUM,EAAOL,OAHvC,UAKGK,EAAOE,MACP,EAAKH,eAAeC,KAJhBA,EAAOL,MAAQK,EAAOG,gB,GA1BfX,aAuCXC,IC1CTW,E,4MACJC,WAAa,SAAClB,EAAMa,GAClB,OAAIA,EAAOM,QAAgBN,EAAOM,QAAQnB,GACnCnC,IAAEuD,IAAIpB,EAAMa,EAAOL,O,EAG5Ba,UAAY,SAACrB,EAAMa,GACjB,OAAOb,EAAK9B,KAAO2C,EAAOL,MAAQK,EAAOG,M,4CAG3C,WAAU,IAAD,OACP,EAA0BZ,KAAKxB,MAAvB0C,EAAR,EAAQA,KAAMR,EAAd,EAAcA,QACd,OACE,gCACGQ,EAAKhC,KAAI,SAACU,GAAD,OACR,6BACGc,EAAQxB,KAAI,SAACuB,GAAD,OACX,6BACG,EAAKK,WAAWlB,EAAMa,IADhB,EAAKQ,UAAUrB,EAAMa,QAFzBb,EAAK9B,c,GAfAmC,aA4BTY,ICnBAM,EATD,SAAC,GAA2C,IAAzCT,EAAwC,EAAxCA,QAASL,EAA+B,EAA/BA,WAAYE,EAAmB,EAAnBA,OAAQW,EAAW,EAAXA,KAC5C,OACE,wBAAOjC,UAAU,QAAjB,UACE,cAAC,EAAD,CAAayB,QAASA,EAASL,WAAYA,EAAYE,OAAQA,IAC/D,cAAC,EAAD,CAAWW,KAAMA,EAAMR,QAASA,QCFhCU,E,4MACJV,QAAU,CACR,CACEN,KAAM,QACNO,MAAO,QACPI,QAAS,SAACM,GAAD,OACP,cAAC,IAAD,CAAMC,GAAE,kBAAaD,EAAMvD,KAA3B,SAAmCuD,EAAMpD,UAG7C,CAAEmC,KAAM,aAAcO,MAAO,SAC7B,CAAEP,KAAM,gBAAiBO,MAAO,SAChC,CAAEP,KAAM,kBAAmBO,MAAO,QAClC,CACEC,IAAK,OACLG,QAAS,SAACM,GAAD,OACP,cAAC,EAAD,CAAO/C,MAAO+C,EAAM/C,MAAOgB,QAAS,kBAAM,EAAKd,MAAM+C,OAAOF,QAGhE,CACET,IAAK,SACLG,QAAS,SAACM,GAAD,OACP,wBACE/B,QAAS,kBAAM,EAAKd,MAAMgD,SAASH,IACnCpC,UAAU,wBAFZ,uB,4CAUN,WACE,MAAuCe,KAAKxB,MAApCR,EAAR,EAAQA,OAAQuC,EAAhB,EAAgBA,OAAQF,EAAxB,EAAwBA,WACxB,OACE,8BACE,cAAC,EAAD,CACEK,QAASV,KAAKU,QACdL,WAAYA,EACZa,KAAMlD,EACNuC,OAAQA,U,GAvCQN,aA8CXmB,IC1CTK,E,4MACJC,MAAQ,CACN1D,OAAQ,GACRH,OAAQ,GACRc,YAAa,EACbpB,SAAU,EACV8C,WAAY,CAAED,KAAM,QAASE,MAAO,Q,EAQtCqB,aAAe,SAACN,GACd,IAAMrD,EAAS,EAAK0D,MAAM1D,OAAO4D,QAAO,SAACC,GAAD,OAAOA,EAAE/D,MAAQuD,EAAMvD,OAC/D,EAAKgE,SAAS,CAAE9D,Y,EAGlB+D,YAAc,SAACV,GACb,IAAMrD,EAAM,YAAO,EAAK0D,MAAM1D,QACxBgE,EAAQhE,EAAOiE,QAAQZ,GAC7BrD,EAAOgE,GAAP,eAAqBhE,EAAOgE,IAC5BhE,EAAOgE,GAAO1D,OAASN,EAAOgE,GAAO1D,MACrC,EAAKwD,SAAS,CAAE9D,Y,EAGlBkE,iBAAmB,SAAC/C,GAClB,EAAK2C,SAAS,CAAEnD,YAAaQ,K,EAG/BgD,kBAAoB,SAACjE,GACnB,EAAK4D,SAAS,CAAEM,cAAelE,EAAOS,YAAa,K,EAGrD0D,WAAa,SAAChC,GACZ,EAAKyB,SAAS,CAAEzB,gB,EAGlBiC,YAAc,WACZ,MAMI,EAAKZ,MALPnE,EADF,EACEA,SACA6E,EAFF,EAEEA,cACA/B,EAHF,EAGEA,WACA1B,EAJF,EAIEA,YACQ4D,EALV,EAKEvE,OAEIwE,EACJJ,GAAiBA,EAActE,IAC3ByE,EAAUX,QAAO,SAACC,GAAD,OAAOA,EAAE3D,MAAMJ,MAAQsE,EAActE,OACtDyE,EAIAvE,EAASZ,EAFAK,IAAEgF,QAAQD,EAAU,CAACnC,EAAWD,MAAO,CAACC,EAAWC,QAElC3B,EAAapB,GAE7C,MAAO,CAAEmF,WAAYF,EAASG,OAAQzB,KAAMlD,I,uDA/C9C,WACE,IAAMH,EAAM,CAAI,CAAEC,IAAK,GAAIC,KAAM,eAArB,mBTZPF,EAAO+D,QAAO,SAAAgB,GAAC,OAAIA,OSaxB5C,KAAK8B,SAAS,CAAE9D,ORmDXA,EQnDgCH,a,oBAgDvC,WACE,IAAgBgF,EAAU7C,KAAK0B,MAAM1D,OAA7B2E,OACAtC,EAAeL,KAAK0B,MAApBrB,WAER,GAAc,IAAVwC,EAAa,OAAO,qEAExB,MAAqC7C,KAAKsC,cAAlCI,EAAR,EAAQA,WAAkB1E,EAA1B,EAAoBkD,KAEpB,OACE,sBAAKjC,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACE5B,MAAO2C,KAAK0B,MAAM7D,OAClB8B,aAAcK,KAAK0B,MAAMU,cACzB1C,aAAcM,KAAKmC,sBAGvB,sBAAKlD,UAAU,MAAf,UACE,wCACU,IACR,sBAAMA,UAAU,gCAAhB,SAAiDyD,IAAmB,IAFtE,6BAKA,cAAC,EAAD,CACE1E,OAAQA,EACRqC,WAAYA,EACZkB,OAAQvB,KAAK+B,YACbP,SAAUxB,KAAK2B,aACfpB,OAAQP,KAAKqC,aAGf,cAAC,EAAD,CACE5D,WAAYiE,EACZnF,SAAUyC,KAAK0B,MAAMnE,SACrBoB,YAAaqB,KAAK0B,MAAM/C,YACxBD,aAAcsB,KAAKkC,6B,GA9FVjC,aAsGNwB,I,QCtGAqB,EARG,WAChB,OACE,qBAAK7D,UAAU,GAAf,SACE,8CCKS8D,EARC,WACd,OACE,qBAAK9D,UAAU,GAAf,SACE,4CCKS+D,EARE,WACf,OACE,qBAAK/D,UAAU,GAAf,SACE,8CCoCSgE,EAtCA,WACb,OACE,qBAAKhE,UAAU,qDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeqC,GAAG,IAAlC,SACE,sBAAMrC,UAAU,yCAAhB,yBAIF,wBACEA,UAAU,iBACViE,KAAK,SACL,iBAAe,WACf,iBAAe,sBACf,gBAAc,qBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMjE,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BkE,GAAG,qBAA7C,SACE,sBAAKlE,UAAU,aAAf,UACE,cAAC,IAAD,CAASA,UAAU,YAAY,eAAa,OAAOqC,GAAG,UAAtD,oBAGA,cAAC,IAAD,CAASrC,UAAU,WAAWqC,GAAG,aAAjC,uBAGA,cAAC,IAAD,CAASrC,UAAU,WAAWqC,GAAG,WAAjC,gCCfG8B,EAdG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC1B,OACE,gCACE,6CAAgBD,EAAME,OAAOJ,MAC7B,wBACElE,UAAU,yBACVK,QAAS,kBAAMgE,EAAQE,KAAK,YAF9B,sBCSAC,G,kKACJ,WACE,OACE,uBAAMxE,UAAU,YAAhB,UAEE,cAAC,EAAD,IACA,eAAC,SAAD,WACE,cAAC,QAAD,CAAOmB,KAAK,cAAcsD,UAAWN,IACrC,cAAC,QAAD,CAAOhD,KAAK,UAAUsD,UAAWjC,IACjC,cAAC,QAAD,CAAOrB,KAAK,aAAasD,UAAWZ,IACpC,cAAC,QAAD,CAAO1C,KAAK,WAAWsD,UAAWX,IAClC,cAAC,QAAD,CAAO3C,KAAK,YAAYsD,UAAWV,IACnC,cAAC,QAAD,CAAO5C,KAAK,IAAIsD,UAAWjC,IAC3B,cAAC,WAAD,CAAUH,GAAG,wB,GAbLrB,cAoBHwD,ICxBTE,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASV,MACvB,2DAsCN,SAASW,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9C,QACfwC,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,M,YCtEjEC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDOX,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,eAAwBxB,OAAOC,UAC3CwB,SAAWzB,OAAOC,SAASwB,OAIvC,OAGFzB,OAAO0B,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMoB,eAAN,sBAEP1B,IAiDV,SAAiCM,GAE/BuB,MAAMvB,GACHI,MAAK,SAAAoB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQ3E,IAAI,gBAAgBiB,QAAQ,cAG7CiC,UAAUC,cAAcyB,MAAMvB,MAAK,SAAAC,GACjCA,EAAauB,aAAaxB,MAAK,WAC7BR,OAAOC,SAASgC,eAKpB9B,EAAgBC,MAGnBa,OAAM,WACLF,QAAQC,IACN,oEArEAkB,CAAwB9B,GAIxBC,UAAUC,cAAcyB,MAAMvB,MAAK,WACjCO,QAAQC,IACN,gHAMJb,EAAgBC,OCjCxB+B,K","file":"static/js/main.a10e460c.chunk.js","sourcesContent":["import _ from \"lodash\";\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n\n  //   _.slice(items, startIndex);\n  // _.take()\n}\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find((m) => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find((m) => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find((g) => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find((m) => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = (props) => {\n  const { itemsCount, pageSize, onPageChange, currentPage } = props;\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n            aria-current=\"page\"\n          >\n            <span\n              style={{ cursor: \"pointer\" }}\n              className=\"page-link\"\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </span>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from \"react\";\nconst ListGroup = (props) => {\n  const { items, textProperty, valueProperty, onItemSelect, selectedItem } =\n    props;\n  return (\n    <div className=\"\">\n      <ul className=\"list-group\">\n        {items.map((item) => (\n          <li\n            style={{ cursor: \"pointer\" }}\n            onClick={() => onItemSelect(item)}\n            key={item[valueProperty]}\n            className={\n              item === selectedItem\n                ? \"list-group-item active\"\n                : \"list-group-item\"\n            }\n          >\n            {item[textProperty]}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\",\n};\n\nexport default ListGroup;\n","import React, { Component } from \"react\";\n\n// Input: liked: boolean\n// Output: onClick\n\nclass Likes extends Component {\n  render() {\n    let classes = \"fa fa-heart\";\n    if (!this.props.liked) classes += \"-o\";\n    return (\n      <i\n        onClick={this.props.onClick}\n        className={classes}\n        style={{ cursor: \"pointer\" }}\n        aria-hidden=\"true\"\n      ></i>\n    );\n  }\n}\n\nexport default Likes;\n","import React, { Component } from \"react\";\n\n// coumns: array\n// sortColumn: object\n// onsort: function\n\nclass TableHeader extends Component {\n  raiseSort = (path) => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = (column) => {\n    const { sortColumn } = this.props;\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-up\"></i>;\n    return <i className=\"fa fa-sort-down\"></i>;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label}\n              {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeander\";\nimport TableBody from \"./tableBody\";\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody data={data} columns={columns} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Likes from \"./common/like\";\nimport Table from \"./common/table\";\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: (movie) => (\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n      ),\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: (movie) => (\n        <Likes liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      ),\n    },\n    {\n      key: \"delete\",\n      content: (movie) => (\n        <button\n          onClick={() => this.props.onDelete(movie)}\n          className=\"btn btn-danger btn-sm\"\n        >\n          Delete\n        </button>\n      ),\n    },\n  ];\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n    return (\n      <div>\n        <Table\n          columns={this.columns}\n          sortColumn={sortColumn}\n          data={movies}\n          onSort={onSort}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { paginate } from \"../utilies/paginate\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagination from \"./common/pagination\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport ListGroup from \"./common/listGroup\";\nimport MoviesTable from \"./moviesTable\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n  };\n\n  handleLiked = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  getPageData = () => {\n    const {\n      pageSize,\n      selectedGenre,\n      sortColumn,\n      currentPage,\n      movies: allMovies,\n    } = this.state;\n    const filtered =\n      selectedGenre && selectedGenre._id\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n        : allMovies;\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { sortColumn } = this.state;\n\n    if (count === 0) return <p>There are no movies in the database.</p>;\n\n    const { totalCount, data: movies } = this.getPageData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-4\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          <p>\n            Showing{\" \"}\n            <span className=\"badge rounded-pill bg-primary\">{totalCount}</span>{\" \"}\n            movies in the database.\n          </p>\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLiked}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={this.state.pageSize}\n            currentPage={this.state.currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from \"react\";\nconst Customers = () => {\n  return (\n    <div className=\"\">\n      <h1>Customers</h1>\n    </div>\n  );\n};\n\nexport default Customers;\n","import React from \"react\";\nconst Rentals = () => {\n  return (\n    <div className=\"\">\n      <h1>Rentals</h1>\n    </div>\n  );\n};\n\nexport default Rentals;\n","import React from \"react\";\nconst NotFound = () => {\n  return (\n    <div className=\"\">\n      <h1>Not Found</h1>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-3\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"#\">\n          <span className=\"badge badge-pill bg-primary fst-italic\">\n            MovieSort\n          </span>\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n          <div className=\"navbar-nav\">\n            <NavLink className=\"nav-link \" aria-current=\"page\" to=\"/movies\">\n              Movies\n            </NavLink>\n            <NavLink className=\"nav-link\" to=\"/customers\">\n              Customers\n            </NavLink>\n            <NavLink className=\"nav-link\" to=\"/rentals\">\n              Rentals\n            </NavLink>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nconst MovieForm = ({ match, history }) => {\n  return (\n    <div>\n      <h1>Movie Form {match.params.id}</h1>\n      <button\n        className=\"btn btn-sm btn-primary\"\n        onClick={() => history.push(\"/movies\")}\n      >\n        Save\n      </button>\n    </div>\n  );\n};\n\nexport default MovieForm;\n","import React, { Component } from \"react\";\nimport Movies from \"./components/movies\";\nimport {\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom/cjs/react-router-dom.min\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notfound\";\nimport NavBar from \"./components/navBar\";\nimport MovieForm from \"./components/movieForm\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <main className=\"container\">\n        {/* <Movies /> */}\n        <NavBar />\n        <Switch>\n          <Route path=\"/movies/:id\" component={MovieForm} />\n          <Route path=\"/movies\" component={Movies} />\n          <Route path=\"/customers\" component={Customers}></Route>\n          <Route path=\"/rentals\" component={Rentals}></Route>\n          <Route path=\"/notfound\" component={NotFound}></Route>\n          <Route path=\"/\" component={Movies}></Route>\n          <Redirect to=\"/notfound\" />\n        </Switch>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}